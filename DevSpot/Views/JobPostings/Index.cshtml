@model IEnumerable<JobPosting>
@Html.Partial("_PopupModal")


@if (Model == null || Model.Count() == 0)
{
    <div class="row mt-4 mb-2">
        <div class="col text-center"><p class="fw-bolder">No jobs available at the moment</p></div>
    </div>
}
else
{
    <div class="row mt-4 mb-2">
        <div class="col text-center fw-bolder"><h2>Available Jobs</h2></div>
    </div>

    <div class="container">
        <div class="list-group">
            @foreach (var jobPost in Model)
            {
                <div class="list-group-item list-group-item-action" aria-current="true">
                    <div class="d-flex w-100 justify-content-between">
                        <h3 class="mb-1">@jobPost.Title</h3>
                        <small>@HelperFunctions.TimeAgo(jobPost.DatePosted)</small>
                    </div>
                    <p class="mb-1"><strong>Location:</strong>  @jobPost.Location</p>
                    <p class="mb-1"><strong>Company:</strong>  @jobPost.Company</p>
                    <p class="mb-1">@jobPost.Description</p>

                    @if (User.IsInRole(Roles.Admin) || User.IsInRole(Roles.Employer))
                    {
                        <div>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal"
                                    onclick="showPopupModal('delete', @jobPost.Id)">
                                Delete Item
                            </button>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <script>
        function showPopupModal(modalType, id) {
            $.ajax({
                url: '@Url.Action("GetModalData", "Shared")',
                type: 'GET',
                data: { modalType: 'delete', id: 1, actionControllerName: "JobPostings" },  // Example: Delete action
                success: function (data) {
                    if (data) {
                        // Set modal content
                        $('#popupModalLabel').text(data.title);
                        $('#popupModalMessage').text(data.message);
                        $('#popupModalActionBtn').text(data.buttonText);
                        $('#popupModalActionBtn').attr('href', data.actionUrl);  // Dynamically set the action URL

                        // Apply the button class (btn-danger for delete, btn-info for info)
                        $('#popupModalActionBtn').removeClass('btn-danger btn-info');
                        $('#popupModalActionBtn').addClass(data.buttonClass);

                        // Show the modal
                        var modal = new bootstrap.Modal(document.getElementById('popupModal'));
                        modal.show();
                    } else {
                        console.log('Error: No data received.');
                    }
                },
                error: function () {
                    alert("An error occurred while fetching modal data.");
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            let items = document.querySelectorAll(".list-group-item");

            items.forEach(item => {
                item.addEventListener("click", function () {
                    items.forEach(i => i.classList.remove("active"));
                    this.classList.add("active");
                });
            });
        });
    </script>
}
